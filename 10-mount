#!/bin/sh

set_fstab(){

	my_fstype="`block info | grep "/dev/$device" | awk -F 'TYPE="' '{print $2}' | sed 's/\"//'`"

	[ -n "$my_fstype" ] && {
	logger -t Auto-Mount "New block.File system:${my_fstype}"
	if [ "$my_fstype" = 'swap' ]; then

		n=$(uci show fstab | grep "fstab.@swap" | grep -c "=swap")

		[ $n -gt 0 ] && {
			for i in $(seq 0 $n)
			do
				old_swap="$(uci get fstab.@swap[$i].device)"
				[ "$old_swap" == "/dev/$device" ] && {
					FLAG="SKIP"
					break
				}
			done
		}

		[ "$FLAG" != "SKIP" ] && {
		uci add fstab swap
		uci set fstab.@swap[$n]="swap"
		uci set fstab.@swap[$n].enabled='1'
		uci set fstab.@swap[$n].device="/dev/$device"
	}

	else
		n=$(uci show fstab | grep "fstab.@mount" | grep -c "=mount")

		[ $n -gt 0 ] && {
			for i in $(seq 0 $n)
			do
				old_mount="$(uci get fstab.@mount[$i].uuid)"
				[ "$old_mount" == "${get_uuid}" ] && {
				FLAG="SKIP"
				break
			}
			done
		}

		[ "$FLAG" != "SKIP" ] && {
			uci add fstab mount
			uci set fstab.@mount[$n]="mount"
			uci set fstab.@mount[$n].enabled='1'
			uci set fstab.@mount[$n].uuid="${get_uuid}"
			uci set fstab.@mount[$n].target="/mnt/$device"
			uci set fstab.@mount[$n].fstype="$my_fstype"

			case "$my_fstype" in
			ext*)
				uci set fstab.@mount[$n].options="noatime"
			;;
			'ntfs')
				if [ $(lsmod | grep -c ufsd) -ge 1 ]
				then
					uci set fstab.@mount[$n].fstype="ufsd"
					uci set fstab.@mount[$n].options="noatime,nls=utf8,force"
				else
					uci set fstab.@mount[$n].fstype="ntfs-3g"
					uci set fstab.@mount[$n].options="noatime,iocharset=utf8,big_writes"
				fi
			;;
			'exfat')
				uci set fstab.@mount[$n].options="noatime"
			;;
			'vfat')
				uci set fstab.@mount[$n].options="iocharset=utf8,umask=0000,dmask=0000,fmask=0000"
			;;
			*)
				uci revert fstab
			;;
			esac
		}
	fi
	uci commit fstab
	}
}

del_fstab(){

	del_disk=$(uci show fstab | grep "/mnt/$device" | awk -F '[' '{print $2}' | awk -F ']' '{print $1}' | sort -r )
	[ -n "$del_disk" ] && {
		for i in $del_disk
		do
			uci delete fstab.@mount[$i]
		done
		uci commit fstab
	}

}

[ -e /etc/config/fstab ] || {
	block detect > /etc/config/fstab
}


[ -e /etc/config/fstab ] && {
	del_num=$(uci show fstab | grep ".enabled='0'" | awk -F '[' '{print $2}' | awk -F ']' '{print $1}' | sort -r )
	[ -n "$del_num" ] && {
		for i in $del_num
		do
			uci delete fstab.@mount[$i]
		done
		uci commit fstab
	}
}


blkdev=`dirname $DEVPATH`


if [ `basename $blkdev` != "block" ]; then
	device=`basename $DEVPATH`
	mountpoint=`sed -ne "s|^[^ ]*/$device ||; T; s/ .*//p" /proc/self/mounts`

	case "$ACTION" in
	add)
		get_uuid=`block info | grep "/dev/${device}" | awk -F "UUID=" '{print $2}'| awk -F "\"" '{print $2}'`

		[ -n "$get_uuid" ] && {

			mounted=`mount -l | awk '{print $1}'`
			flag=0
			for dev_mounted in $mounted ; do
				if [ "/dev/${device}" == $dev_mounted ]; then
					flag=1
				fi
			done

			[ $flag != 1 ] && {

				logger -t Auto-Mount "Block /dev/${device} added."
				logger -t Auto-Mount "UUID=$get_uuid"
				have_uuid=$(uci show fstab | grep -c "$get_uuid")

				[ "$have_uuid" = "0" ] && {
					mkdir -p /mnt/$device
					chmod 777 /mnt/$device
					set_fstab
					block mount >> /dev/null 2>&1
				}
			}
		}
	;;

	remove) 
    		del_fstab
		umount /mnt/$device  
    		if [ $? -eq 0 ]  
    		then  
      			rmdir /mnt/$device
    		fi 
	esac  
fi

